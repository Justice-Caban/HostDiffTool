/**
 * @fileoverview gRPC-Web generated client stub for hostdiff
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.21.12
// source: proto/host_diff.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_host_diff_pb from '../proto/host_diff_pb'; // proto import: "proto/host_diff.proto"


export class HostServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorUploadSnapshot = new grpcWeb.MethodDescriptor(
    '/hostdiff.HostService/UploadSnapshot',
    grpcWeb.MethodType.UNARY,
    proto_host_diff_pb.UploadSnapshotRequest,
    proto_host_diff_pb.UploadSnapshotResponse,
    (request: proto_host_diff_pb.UploadSnapshotRequest) => {
      return request.serializeBinary();
    },
    proto_host_diff_pb.UploadSnapshotResponse.deserializeBinary
  );

  uploadSnapshot(
    request: proto_host_diff_pb.UploadSnapshotRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_host_diff_pb.UploadSnapshotResponse>;

  uploadSnapshot(
    request: proto_host_diff_pb.UploadSnapshotRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_host_diff_pb.UploadSnapshotResponse) => void): grpcWeb.ClientReadableStream<proto_host_diff_pb.UploadSnapshotResponse>;

  uploadSnapshot(
    request: proto_host_diff_pb.UploadSnapshotRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_host_diff_pb.UploadSnapshotResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/hostdiff.HostService/UploadSnapshot',
        request,
        metadata || {},
        this.methodDescriptorUploadSnapshot,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/hostdiff.HostService/UploadSnapshot',
    request,
    metadata || {},
    this.methodDescriptorUploadSnapshot);
  }

  methodDescriptorGetHostHistory = new grpcWeb.MethodDescriptor(
    '/hostdiff.HostService/GetHostHistory',
    grpcWeb.MethodType.UNARY,
    proto_host_diff_pb.GetHostHistoryRequest,
    proto_host_diff_pb.GetHostHistoryResponse,
    (request: proto_host_diff_pb.GetHostHistoryRequest) => {
      return request.serializeBinary();
    },
    proto_host_diff_pb.GetHostHistoryResponse.deserializeBinary
  );

  getHostHistory(
    request: proto_host_diff_pb.GetHostHistoryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_host_diff_pb.GetHostHistoryResponse>;

  getHostHistory(
    request: proto_host_diff_pb.GetHostHistoryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_host_diff_pb.GetHostHistoryResponse) => void): grpcWeb.ClientReadableStream<proto_host_diff_pb.GetHostHistoryResponse>;

  getHostHistory(
    request: proto_host_diff_pb.GetHostHistoryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_host_diff_pb.GetHostHistoryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/hostdiff.HostService/GetHostHistory',
        request,
        metadata || {},
        this.methodDescriptorGetHostHistory,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/hostdiff.HostService/GetHostHistory',
    request,
    metadata || {},
    this.methodDescriptorGetHostHistory);
  }

  methodDescriptorCompareSnapshots = new grpcWeb.MethodDescriptor(
    '/hostdiff.HostService/CompareSnapshots',
    grpcWeb.MethodType.UNARY,
    proto_host_diff_pb.CompareSnapshotsRequest,
    proto_host_diff_pb.CompareSnapshotsResponse,
    (request: proto_host_diff_pb.CompareSnapshotsRequest) => {
      return request.serializeBinary();
    },
    proto_host_diff_pb.CompareSnapshotsResponse.deserializeBinary
  );

  compareSnapshots(
    request: proto_host_diff_pb.CompareSnapshotsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_host_diff_pb.CompareSnapshotsResponse>;

  compareSnapshots(
    request: proto_host_diff_pb.CompareSnapshotsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_host_diff_pb.CompareSnapshotsResponse) => void): grpcWeb.ClientReadableStream<proto_host_diff_pb.CompareSnapshotsResponse>;

  compareSnapshots(
    request: proto_host_diff_pb.CompareSnapshotsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_host_diff_pb.CompareSnapshotsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/hostdiff.HostService/CompareSnapshots',
        request,
        metadata || {},
        this.methodDescriptorCompareSnapshots,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/hostdiff.HostService/CompareSnapshots',
    request,
    metadata || {},
    this.methodDescriptorCompareSnapshots);
  }

}

